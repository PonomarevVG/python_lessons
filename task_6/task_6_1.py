# Задание 6.1
# Создать класс TrafficLight (светофор).
# определить у него один атрибут color (цвет) и метод running (запуск);
# атрибут реализовать как приватный;
# в рамках метода реализовать переключение светофора в режимы: красный, жёлтый, зелёный;
# продолжительность первого состояния (красный) составляет 7 секунд, второго (жёлтый) — 2 секунды,
# третьего (зелёный) — на ваше усмотрение;
# переключение между режимами должно осуществляться только в указанном порядке (красный, жёлтый, зелёный);
# проверить работу примера, создав экземпляр и вызвав описанный метод.
# Задачу можно усложнить, реализовав проверку порядка режимов.
# При его нарушении выводить соответствующее сообщение и завершать скрипт.

from itertools import cycle
from time import sleep


class TrafficLight:
    __colors = ['красный', 'желтый', 'зеленый']
    __changing_colors_time = {'красный': 7, 'желтый': 2, 'зеленый': 3}

    def __init__(self):
        self.__colors_iter = cycle(self.__colors)
        self.__color = 'Red'

    # Метод запускает переключение цветов сфетофора с разными для каждого цвета интервалами в секундах,
    # запрашивает у пользователя после каждой смены цвета, продолжать ли переключать цвета и прекращает
    # переключение, если пользователь введет символ q
    def running(self):
        while True:
            self.__color = next(self.__colors_iter)
            print(f'Цвет светофора: {self.__color}. Начинаем переключение цветов')
            for i in range(self.__changing_colors_time[self.__color]):
                sleep(1)
                print(f'{i+1} секунда')
            if input('Введите q, если хотите остановить переключение цветов светофора: ') == 'q':
                return

    # Метод сообщаяет текущий цвет светофора, запрашивает у пользователя новый цвет, проверяет следует ли цвет за
    # текущим (в противном случае выдает ошибку) и в конце работы меняет цвет на следующий
    def test_color_order(self):
        print(f'Цвет светофора: {self.__color}')
        next_color = input('Введите следующий свет, на который должен переключиться светофор: ').lower()
        self.__color = next(self.__colors_iter)
        if self.__color == next_color:
            print('Все верно! Это следующий цвет. Переключаем цвет на следующий')
        else:
            print('Ошибка: цвет светофора можно менять только на следующий за ним! Переключаем цвет на следующий')
        print(f'После переключения цвет светофора: {self.__color}')


currentTrafficLight = TrafficLight()
currentTrafficLight.running()
currentTrafficLight.test_color_order()


